Some (not Frequently) Q&A's 
---------------------------
****
How to backout all changes committed to local repo but not yet pushed to
remote? 
  git fetch 
  git reset --hard origin/master 

****
Forgot to commit local changes and checked out [or merged] another branch. How 
do I get back older changes?
  git reset --merge 

****
Revert single uncommitted file 
  git checkout filename  # this is also used to checkout branches. If
                         # filename is same as branch, this doesn't work
  git checkout -- filename # is preferred 

****
Revert single committed file to earlier commit 
  git checkout <commit-ref> path/to/file 

****
How to fix log of last committed message. 
  git commit --ammend    # will open an editor to change commit message. 
  git commit --ammend -m "New message, which will overwrite old one" 
  git commit --ammend -author "New Author Name <email@address.com>" 
 
****
How to fix logs of last few committed messages. Multple ways to do this: 
  (a) Using git rebase: 
     - `git rebase -i $parent_of_flawed_commit`
     - i) Editor will pop up. Change `pick` to `edit` or appropriate
          option. 
       ii) Save and git will replay listed commits. 
     - Git will drop you in to an editor for every commit you want to
       change. 
       i) Change commit as you like. 
       ii) git commit --ammend 
       iii) git rebase --continue
  (b) Using git filter-branch. Read following references:
 
http://stackoverflow.com/questions/750172/how-do-i-change-the-author-of-a-commit-in-git
http://schacon.github.io/git/git-filter-branch.html   
https://help.github.com/articles/changing-author-info

****
How to revert a single local commit? 
A definitive answer at SO: http://stackoverflow.com/a/6866485/630866 

****
Squash multiple commits in to a single one?
Easy way:
# Reset branch to origin's state
git reset origin/master

# All changes are unstaged and present in working directory. Add them and
# commit as one commit. 
git add --all 
git commit

Longer way: 
git rebase -i 


****
Advanced Git: Graphs, Hashes and Compressions
https://www.youtube.com/watch?v=ig5E8CcdM9g

 
